package pipeline.runtime;

/*Generated by MPS */

import java.io.BufferedReader;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.io.IOException;

public class Reader extends Filter<String, TextItem> {
  private BufferedReader input;
  private ConcurrentLinkedQueue<TextItem> queue;

  public Reader(String filename) {
    try {
      input = new BufferedReader(new FileReader(filename));
      this.queue = new ConcurrentLinkedQueue<TextItem>();
    } catch (FileNotFoundException e) {
      e.printStackTrace();
    }
  }

  public void run() {
    String str;
    queue.add(new TextItem(Item.State.KEY_WORD, TextItem.BEGIN_OF_TEXT));
    try {
      while ((str = input.readLine()) != null) {
        queue.add(new TextItem(Item.State.STR, str));
      }
      input.close();
    } catch (IOException e) {
      e.printStackTrace();
    }

    queue.add(new TextItem(Item.State.KEY_WORD, TextItem.END_OF_TEXT));
  }
  @Override
  public TextItem getItem() {
    TextItem item = queue.poll();
    if (item == null) {
      return new TextItem(Item.State.EMPTY, null);
    } else {
      return item;
    }
  }
}
