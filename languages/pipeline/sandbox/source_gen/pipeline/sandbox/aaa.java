package pipeline.sandbox;

/*Generated by MPS */

import java.io.BufferedReader;
import java.util.concurrent.ConcurrentLinkedQueue;
import java.io.FileReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.FileOutputStream;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public class aaa {
  public static final String END_OF_TEXT = "<END_OF_TEXT>";

  private class Reader implements Runnable {
    private BufferedReader input;
    private ConcurrentLinkedQueue<String> queue;

    public Reader(String filename, ConcurrentLinkedQueue<String> queue) {
      try {
        input = new BufferedReader(new FileReader(filename));
        this.queue = queue;
      } catch (FileNotFoundException e) {
        e.printStackTrace();
      }
    }

    public void run() {
      String str;
      try {
        while ((str = input.readLine()) != null) {
          queue.add(str);
        }
        input.close();
      } catch (IOException e) {
        e.printStackTrace();
      }

      queue.add(END_OF_TEXT);
    }
  }

  private class Writer implements Runnable {
    private PrintWriter output;
    private ConcurrentLinkedQueue<String> queue;

    public Writer(String filename, ConcurrentLinkedQueue<String> queue) {
      try {
        output = new PrintWriter(new FileOutputStream(filename), true);
      } catch (FileNotFoundException e) {
        e.printStackTrace();
      }
      this.queue = queue;
    }
    @Override
    public void run() {
    }
  }

  private aaa.Writer writer;
  private List<IFilter> filters;

  public aaa() {
    System.out.println("Init start");
    filters = ListSequence.fromList(new LinkedList<IFilter>());
    // init filters 
    writer = new aaa.Writer("\"output.txt\"", null);
    System.out.println("Init finish");
  }

  public void myRun() {
    try {
      // run filters 
      Thread thread = new Thread(writer);
      thread.start();


    } catch (Exception e) {
      e.printStackTrace();
    }
  }

  public static void main(String[] args) {
    System.out.println("main()");
    (new aaa()).myRun();
  }
}
