package pipeline.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Filter = 0;
  public static final int Path = 1;
  public static final int Pipeline = 2;
  public static final int SplitSentence = 3;
  public static final int SplitText = 4;
  public static final int toEnglish = 5;
  public static final int toLower = 6;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x7655a5e7076c42d6L, 0xb8853f94b3d29c6bL);
    builder.put(0x2a3c2aa1feea76a4L, Filter);
    builder.put(0x2a3c2aa1ff0f8a8eL, Path);
    builder.put(0x5433b88ac5b47d87L, Pipeline);
    builder.put(0x2a3c2aa1fee9ce93L, SplitSentence);
    builder.put(0x5433b88ac5b47dabL, SplitText);
    builder.put(0x2a3c2aa1fee9d9adL, toEnglish);
    builder.put(0x2a3c2aa1fee9d938L, toLower);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
